// <auto-generated />
using System;
using BookOnline.Borrowing.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookOnline.Borrowing.Api.Migrations
{
    [DbContext(typeof(BorrowingDBContext))]
    [Migration("20220914232111_Initializ")]
    partial class Initializ
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("borrow_item_seq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("borrow_seq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("memberseq")
                .IncrementsBy(10);

            modelBuilder.Entity("BookOnline.Borrowing.Api.Models.Borrow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "borrow_seq");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_borrowDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BorrowDate");

                    b.Property<int>("_borrowStatus")
                        .HasColumnType("int")
                        .HasColumnName("BorrowStatus");

                    b.Property<string>("_description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("_pickupDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PickupDate");

                    b.Property<DateTime>("_returnDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReturnDate");

                    b.Property<int>("_shipType")
                        .HasColumnType("int")
                        .HasColumnName("ShipType");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Borrow", (string)null);
                });

            modelBuilder.Entity("BookOnline.Borrowing.Api.Models.BorrowItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "borrow_item_seq");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("BorrowId")
                        .HasColumnType("int");

                    b.Property<string>("_pictureUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PictureUrl");

                    b.Property<string>("_title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("BorrowId");

                    b.ToTable("BorrowItem", (string)null);
                });

            modelBuilder.Entity("BookOnline.Borrowing.Api.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "memberseq");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("BookOnline.Borrowing.Api.Models.Borrow", b =>
                {
                    b.HasOne("BookOnline.Borrowing.Api.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.OwnsOne("BookOnline.Borrowing.Api.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("BorrowId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseHiLo(b1.Property<int>("BorrowId"), "borrow_seq");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BorrowId");

                            b1.ToTable("Borrow");

                            b1.WithOwner()
                                .HasForeignKey("BorrowId");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("BookOnline.Borrowing.Api.Models.BorrowItem", b =>
                {
                    b.HasOne("BookOnline.Borrowing.Api.Models.Borrow", null)
                        .WithMany("Items")
                        .HasForeignKey("BorrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookOnline.Borrowing.Api.Models.Borrow", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
